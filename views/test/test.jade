extends ../layout
// importar la capçalera
// injectar a la capçalera abans del proper

//- Fully replace
    Replace the block
    block scripts
        script(src='script.js')

//-
    Append a the end
    append scripts
    script(src='script.js', type='text/javascript')
    //- Append a the beggining

prepend scripts
    script(src='script.js', type='text/javascript')


block content
    //-
        JS code can be executed in this template as Jade is JS
    - var author = "Chenglong.Zou"
    - var date = "Today is Yesterday's Tomorrow."
    - String.prototype.title_case = function(){
    -   return this.replace(/\w\S*/g, function(txt){
    -       return txt.chartAt(0).toUnicode() + txt.substr(1).toLowerCase();
    -   })
    - }
    h1 Hello World
    p
        This is a comment
        This is a comment

    p
        | This is another comment
        | This is another comment
        | This is another comment
        br
        | This is another comment

    p.
        This is magic
        This is magic 2
        This is a html tag <br>
        This is magic <b>bold</b>

    p(id="hello")
        | Hello World with attr "id=hello"

    //-
        Passing objects as attributes
        This is not much deal unless if we got an custom toString for that obj

    div(class=['one', 'two', 'three'])
        | This is a magic Div

    //-
        Silent comment
        Id and Class ShortHands

    div#id_Motorola.class_Rules
        | Motorola Rules!

    // Single Line Comment

    //
        Multiline comment

    //-
        Block Expansion
        : after a tag means that there is another tag following by it

    ol
        li.first: a(href="#") TOP
        li: a(href="#") MID
        li.last: a(href="#") BOT

    ul: li.first: b: a(href="#") Stack in one line

    p   I am #{author}!

    - var magic_url = "www.google.es"
    a(href="#{magic_url}")

    - var my_magic_array = [0,1,2,3]
    pre.
        #{my_magic_array[2]} #{my_magic_array[2]}
        #{my_magic_array[1]} #{my_magic_array[3]}

    - var my_tag = "magicTAG"

    #{my_tag} This is a magic Tag Section


    //-
        Using variable without interpolation
        Equal(=) means attribute or block with full content of the variable

    - var i = {type: "text", name: "Cheng"}
    input(type=i.type, name=i.name)

    //-
        Escaping, jade encode to ascii by default
        ! NOT ESCAPTING HTML CODE (RISK: XSS ATTACK)
        =   -> !=
        #{} -> !{}

    - var content = "Hello<em>World</em>"
    p!= content

    p= content

    p= args


    //-
        LOGIC in Templates

    - var name = "Jade"
    - if (name == "Bob"){
    h3 Hello Bob
    - } else {
    h2 Hello #{name}
    - }



    //-
        LOGIC in ShortHand
    - var greeting = ( name== 'Bob' ? 'Hello' : 'My name is')
    h1 #{greeting} #{name}
    h2= greeting + ", " + name



    //-
        For loops
    - var list = ['one', 'two', 'three']

    ul
    - for (var idx in list){
    li= list[idx]
    - console.log(list[idx])
    - }

    //-
        Comple Operations

    //-
        Jade Built-in logical operators


    - var magic = "Joe"
    if magic == "Cheng"
        h1 Hello Master Cheng
    else if magic == "Joe"
        h2 Hello GrandMaster Joe
    else
        h3 Hello #{magic}...


    //- Unless
        Realitza lo contrari del condicional {!{regexp}}

    - var action = "Exit"
    unless action == "Continue"
        h4 Continue
    else
        h5 Exit


    //- Cases : Switch


    - var girl = "Joanna"

    case girl
        when "Joanna"
            p6 She is hot
        when "Sara"
            p6 She is crazy
        default
            p6 She is a man


    //-
        Each loops
        each VAL[, KEY] in OBJ ---> iterator

    ul
        each item in list
            li=item


    select
        each item, i in list
            option(value=i) Item #{item}


    //-
        While loops
    p   While looping
    ul
    - var i = 0
    while i < list.length
        li=list[i]
        - i++




    //- Magic Mixins

    mixin person(name, hit)
        li #{name} hit:  #{hit} results



    ul#persons
        +person("Cheng", 1)
        +person("Aaron", 2)


    mixin copyleft
        | (&#596;)

    p
        +copyleft
        |  - PoPuliPolls

    //- Passing Blocks

    mixin input(name)
        li(id=name.replace(/\s/g, '-'))
            label= name + ':'
            block
    form: ul
        +input('favorite color')
            input('type'='text')
        +input('comments')
            textarea type your comment here.

    //- The arguments object

    mixin list()
        ul
            - var args = Array.prototype.slice.call(arguments);
            // its not an real array maybe we cannot iterate through it
            for item in args
                li=item


    +list('one','two','three')


